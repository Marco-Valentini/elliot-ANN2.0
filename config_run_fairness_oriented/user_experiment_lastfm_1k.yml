experiment:
  dataset: lastfm_1k
  data_config:
    strategy: fixed
    train_path: ../data/lastfm_1k/filtered_data/0/train.tsv
    test_path: ../data/lastfm_1k/filtered_data/0/test.tsv
    side_information:
      - dataloader: ItemPopularityUserTolerance
        user_file: ../data/lastfm_1k/users_tolerance_2.tsv
        item_file: ../data/lastfm_1k/items_popularity_2.tsv
        user_group_file: ../data/lastfm_1k/group_tolerance_2_to_users.json
        item_group_file: ../data/lastfm_1k/group_popularity_2_to_items.json
  top_k: 50
  path_output_rec_result: ./results/lastfm_1k_user_fairness/recs/
  path_output_rec_weight: ./results/lastfm_1k_user_fairness/weights/
  path_output_rec_performance: ./results/lastfm_1k_user_fairness/performance/
  path_log_folder: ../log/lastfm_1k_user_fairness/
  evaluation:
    cutoffs: 20
    simple_metrics: [ nDCGRendle2020 ]
  external_models_path: ../external/models/__init__.py
  models:
    UserKNNfairness:
      meta:
        verbose: True
        save_recs: True
        hyper_opt_alg: grid
        validation_metric: nDCGRendle2020@20
      neighbors: [ 50, 100, 250, 500 ]
      similarity: [ cosine, jaccard, euclidean ]
      pre_post_processing: [ users-resampling, parity, interactions-users, interactions-items ]