experiment:
  dataset: movielens_100k
  data_config:
    strategy: dataset
    dataset_path: ../data/movielens_100k/dataset.tsv
  binarize: True
  prefiltering:
    strategy: global_threshold
    threshold: 4
  splitting:
    test_splitting:
        strategy: temporal_hold_out
        test_ratio: 0.2
  top_k: 50
  evaluation:
    cutoffs: [5, 10, 20]
    simple_metrics: [nDCG,Precision,ItemCoverage,EPC,Gini]
    relevance_threshold: 1
#  gpu: 1
  external_models_path: ../external/models/__init__.py
  models:
#    Random:
#      meta:
#        verbose: True
#        save_recs: True
#      seed: 42
#    external.MostPop:
#      meta:
#        verbose: True
#        save_recs: True
#        validation_metric: nDCG@10
#    ItemKNN:
#      meta:
#        verbose: False
#        save_recs: False
#        validation_metric: nDCG@10
#      neighbors: [50, 70, 100]
#      similarity: [cosine, euclidean]
#      implementation: standard
    ItemFairANN:
      meta:
        verbose: True
        save_recs: False
        validation_metric: nDCG@10
      neighbors: 50
      similarity: cosine
      sampling_strategy: uniform
      validate: False
      n_hash: 3
      n_tables: 5
      similarity_threshold: 0.3
    UserFairANN:
      meta:
        verbose: True
        save_recs: False
        validation_metric: nDCG@10
      neighbors: 50
      similarity: cosine
      sampling_strategy: uniform
      validate: False
      n_hash: 3
      n_tables: 5
      similarity_threshold: 0.3
    ItemANNLSH:
      meta:
        verbose: True
        save_recs: False
        validation_metric: nDCG@10
      neighbors: 50
      similarity: cosine
      validate: False
      n_hash: 3
      n_tables: 5
      similarity_threshold: 0.3
    UserANNLSH:
      meta:
        verbose: True
        save_recs: False
        validation_metric: nDCG@10
      neighbors: 50
      similarity: cosine
      validate: False
      n_hash: 3
      n_tables: 5
      similarity_threshold: 0.3

